Iterative Statements
--------------------
1. While loop
2. until loop
3. d

1. While loop:
---
if we dont know number of iterations in advance, then we should go for while loop.
As long as condition is true, then body will be executed. 
Once condition fails then only loop will be terminated.

Q1. Write a script to print numbers from 1 to 10

#! /bin/bash

i=1

while [ $i -le 10 ]
do
	echo "$i"
	let i++
done

_________________

Q2. Write a script to generate numbers until some limit which is provided by end user.

#! /bin/bash

read -p "enter limit: " n

i=1

while [ $i -le $n ]
do
	echo $i
	let i++
done

Sleep command:
If we dont want to perform any operations for a perticular amount of time then we should go for sleep command.
the argument to the sleep command is seconds.

eg:

#! /bin/bash

read -p "enter limit: " n

i=1

while [ $i -le $n ]
do
	echo $i
	sleep 0.5
	let i++
done

___________________________________

Q.3 Write a script to find the sum of first n integers, where n is provided by end user?

#! /bin/bash

read -p " enter the number: " n
i=1
sum=0

while [ $i -le $n ]
do
	let sum=sum + i
	let i++
done
echo "the sum of first $n natural numbers  is :  $sum"

__________________________________________

Q.4 Write a script to display timer on the terminal (digital timer)

#! /bin/bash

while [ true ]
do 
	clear 
	echo $(date +%H:%M:%S)
	sleep 1
done

________________
# display timer in center
#! /bin/bash

while [ true ]
do 
	clear 
	echo -e " \n\n\n\n\t\t $(date +%H:%M:%S)"
	sleep 1
done

______________________

tput command:
to put the cursor wherever required.

eg.
#! /bin/bash

while [ true ]
do 
	clear
	tput cup 7 25
	echo " Welcome to durgasoft "
	sleep 2
done




































